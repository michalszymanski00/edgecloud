name: CI
on:
  push:        { branches: [main] }
  pull_request:{ branches: [main] }

env:
  PY_VER: "3.12"             # usable in steps
  # PG_VER stays only as documentation now

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PY_VER }} }

      - name: Install tooling
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy

      - run: ruff check .
        name: Ruff (lint)

      - run: mypy control-plane-api/src tests
        name: MyPy

  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17            # ðŸ‘ˆ  fixed
        env:
          POSTGRES_USER:     edge
          POSTGRES_PASSWORD: edgepass
          POSTGRES_DB:       edgecloud
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U edge -d edgecloud"
          --health-interval=3s
          --health-timeout=2s
          --health-retries=10

    env:
      DATABASE_URL: postgresql+asyncpg://edge:edgepass@localhost:5432/edgecloud

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PY_VER }} }

      - name: Install project (+dev)
        run: |
          python -m pip install --upgrade pip
          pip install -e "control-plane-api[dev]"

      - name: Alembic upgrade head
        working-directory: control-plane-api
        run: alembic upgrade head

      - name: Migration round-trip
        working-directory: control-plane-api
        run: |
          head=$(alembic current | awk '{print $1}')
          alembic downgrade -1
          alembic upgrade "$head"

      - name: Pytest
        run: pytest -q
