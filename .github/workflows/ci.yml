name: CI

on:
  push:       { branches: [main] }
  pull_request: { branches: [main] }

env:
  PY_VER: "3.12"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) install Python
      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PY_VER }} }

      # 2) make sure pip‐installed CLI tools land on PATH
      - name: Add pip user‐bin to PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      # 3) install just the linters
      - run: |
          python -m pip install --upgrade pip
          pip install ruff mypy

      - run: ruff check .
      - run: mypy control-plane-api/src

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER:     edge
          POSTGRES_PASSWORD: edgepass
          POSTGRES_DB:       edgecloud
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U edge -d edgecloud"
          --health-interval=3s
          --health-timeout=2s
          --health-retries=10

    env:
      DATABASE_URL: postgresql+asyncpg://edge:edgepass@localhost:5432/edgecloud

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: ${{ env.PY_VER }} }

      # again, so alembic & pytest show up
      - name: Add pip user‐bin to PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      # install your package + all dev tools
      - name: Install control-plane-api + dev tools
        run: |
          cd control-plane-api
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      # apply migrations
      - name: Alembic upgrade head
        working-directory: control-plane-api
        run: alembic upgrade head

      # check down/up
      - name: Migration round-trip
        working-directory: control-plane-api
        run: |
          head=$(alembic current | awk '{print $1}')
          alembic downgrade -1
          alembic upgrade "$head"

      # run tests
      - run: pytest -q
